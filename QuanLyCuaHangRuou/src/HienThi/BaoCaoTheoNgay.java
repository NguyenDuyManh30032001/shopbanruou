/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HienThi;

import Dialog.InBaoCao;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class BaoCaoTheoNgay extends javax.swing.JFrame {
  SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");   
    Connection connect = null;
    PreparedStatement preparedStatement = null;
    ResultSet resultSet = null;    
    DefaultTableModel dtmBaoCao;   
    int ngay, thang, nam;
    boolean kq = false;

    String ngayBC = "";
    /**
     * Creates new form BaoCaoTheoNgay
     */
    public BaoCaoTheoNgay() {
        initComponents();
         Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight() - 300) / 2);
        this.setLocation(x, y); 
        txtTongDoanhThu.setEnabled(false);
        hienThi();
        ketNoiDL();
        dtmBaoCao = (DefaultTableModel) tblEmptyBaoCaoNgay.getModel();
        dtmBaoCao.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboThang = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox<>();
        cboNgay = new javax.swing.JComboBox<>();
        btnTimNgay = new javax.swing.JButton();
        btnInNgay = new javax.swing.JButton();
        btnThoatNgay = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmptyBaoCaoNgay = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtTongDoanhThu = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BÁO CÁO THEO NGÀY");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Báo cáo:", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel2.setText("Chọn ngày:");

        jLabel4.setText("Chọn tháng:");

        jLabel5.setText("Chọn năm:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cboNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        btnTimNgay.setText("Tìm");
        btnTimNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimNgayActionPerformed(evt);
            }
        });

        btnInNgay.setText("In");
        btnInNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInNgayActionPerformed(evt);
            }
        });

        btnThoatNgay.setText("Thoát");
        btnThoatNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatNgayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnInNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThoatNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnTimNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnInNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(btnThoatNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblEmptyBaoCaoNgay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Tên rượu", "Giá nhập", "Giá bán", "Số lượng bán", "Doanh thu"
            }
        ));
        jScrollPane1.setViewportView(tblEmptyBaoCaoNgay);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Tổng doanh thu:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTongDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTongDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimNgayActionPerformed
        // TODO add your handling code here:
        int count = 0;
        int tongThanhTien = 0;
        ngay = Integer.parseInt("" + cboNgay.getSelectedItem()) ;
        thang = Integer.parseInt("" + cboThang.getSelectedItem()) ;
        nam = Integer.parseInt("" + cboNam.getSelectedItem());

        int dl = tblEmptyBaoCaoNgay.getRowCount();
        if (dl > 0){
            for (int i = dl -1; i >= 0; i--){
                dtmBaoCao.removeRow(i);
            }
        }

        if (ktNam(nam)){
            if (ktThang(thang)){
                if (ktNgay(ngay)){
                    //---------------Lấy số lượng ruou bán trong ngày cần kiểm tra
                    try {
                        String sqlSoLuong = "select CTHOADON.MARUOU,GIABAN, soLuong\n" +
"                        from HOADON,CTHOADON,RUOU\n" +
"                        where HOADON.MAHD = CTHOADON.MAHD and RUOU.MARUOU = CTHOADON.MARUOU\n" +
"                        and DAY(NGAYHD) = ? and MONTH(NGAYHD) = ? and YEAR(NGAYHD) = ?";
                        preparedStatement = connect.prepareStatement(sqlSoLuong);
                        preparedStatement.setInt(1, ngay);
                        preparedStatement.setInt(2, thang);
                        preparedStatement.setInt(3, nam);
                        resultSet = preparedStatement.executeQuery();
                        while (resultSet.next()) {                
                            count++;
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    String [] maRuou = new String[count];
                     int [] giaNhap = new int[count];
                     int [] giaBan = new int[count];
                    int [] soLuongBan = new int[count];
                    int [] tongTienBan = new int[count];
                    //------------------------------Lấy mã ruou - giá bán trong ngày cần báo cáo
                    if (count > 0){
                        try {
                            String sqlNhapRuou = "select CTHOADON.MARUOU,GIABAN, soLuong, TONGTIEN\n" +
"                        from HOADON,CTHOADON,RUOU\n" +
"                        where HOADON.MAHD = CTHOADON.MAHD and RUOU.MARUOU = CTHOADON.MARUOU\n" +
"                        and DAY(NGAYHD) = ? and MONTH(NGAYHD) = ? and YEAR(NGAYHD) = ?";
                            preparedStatement = connect.prepareStatement(sqlNhapRuou);
                            preparedStatement.setInt(1, ngay);
                            preparedStatement.setInt(2, thang);
                            preparedStatement.setInt(3, nam);
                            resultSet = preparedStatement.executeQuery();
                            int i = 0;
                            while (resultSet.next()) {
                                maRuou[i] = resultSet.getString("maRuou");
                                giaBan[i] = resultSet.getInt("GiaBan");
                                soLuongBan[i] = resultSet.getInt("soLuong");
                                tongTienBan[i] = resultSet.getInt("tongTien");
                                i++;
                            }
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        //-----------------------------Lấy giá nhập của ruou đó
                        finally {
                            try {
                                for (int i = 0; i < maRuou.length; i++) {
                                    String sqlGetGiaNhap = "select TienDauTu from NHAPHANG where maRUOU = ?";
                                    preparedStatement = connect.prepareStatement(sqlGetGiaNhap);
                                    preparedStatement.setString(1, maRuou[i]);
                                    resultSet = preparedStatement.executeQuery();
                                    while (resultSet.next()) {                        
                                        giaNhap[i] = resultSet.getInt("TienDauTu");
                                    }
                                }

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                        //---------------------Tính doanh thu
                        int [] doanhthu = new int[count];
                        for (int i = 0; i < count; i++) {
                            doanhthu[i] = tongTienBan[i] - giaNhap[i];
                        }

                        for (int i = 0; i < count; i++) {
                            Vector<Object> vec = new Vector<Object>();
                            vec.add(maRuou[i]);
                            vec.add(giaNhap[i]);
                            vec.add(giaBan[i]);
                            vec.add(soLuongBan[i]);
                            vec.add(doanhthu[i]);
                            dtmBaoCao.addRow(vec);
                            tongThanhTien += doanhthu[i];
                        }
                        txtTongDoanhThu.setText("" + tongThanhTien);
                    }
                    else {
                        int soHang = tblEmptyBaoCaoNgay.getRowCount();
                        if (soHang > 0){
                            for (int i = soHang - 1; i >= 0; i--) {
                                dtmBaoCao.removeRow(i);
                            }
                        }
                        txtTongDoanhThu.setText("");
                        JOptionPane.showMessageDialog(this, "Không có sản phẩm nào được bán trong ngày " + ngay + " / " + thang + " / " + nam,
                            "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                else {
                    switch(thang){
                        case 1:
                        case 3:
                        case 5:
                        case 7:
                        case 8:
                        case 10:
                        case 12:
                        if (cboNgay.getSelectedItem().equals("31")){
                            JOptionPane.showMessageDialog(this, "Tháng " + thang + " chỉ có 30 ngày. Vui lòng nhập lại !", "Thông báo",
                                JOptionPane.INFORMATION_MESSAGE);
                        }
                        break;
                        case 2:
                        if (nam % 400 == 0 || nam %4 == 0){
                            if (cboNgay.getSelectedItem().equals("30") || cboNgay.getSelectedItem().equals("31")){
                                JOptionPane.showMessageDialog(this, "Năm " + nam + " Tháng " + thang + " chỉ có 29 ngày. Vui lòng chọn lại !", "Thông báo",
                                    JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                        else{
                            if (cboNgay.getSelectedItem().equals("29") || cboNgay.getSelectedItem().equals("30") || cboNgay.getSelectedItem().equals("31")){
                                JOptionPane.showMessageDialog(this, "Năm " + nam + " Tháng " + thang + " chỉ có 28 ngày. Vui lòng chọn lại !", "Thông báo",
                                    JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_btnTimNgayActionPerformed

    private void btnThoatNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatNgayActionPerformed
        // TODO add your handling code here:
        int tl = JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát !", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (tl == JOptionPane.NO_OPTION) return;
        else {
            this.dispose();
        }
    }//GEN-LAST:event_btnThoatNgayActionPerformed

    private void btnInNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInNgayActionPerformed
        InBaoCao in = new InBaoCao(this, rootPaneCheckingEnabled);
        in.LayThongTin(cboNgay.getSelectedItem().toString(), cboThang.getSelectedItem().toString(), cboNam.getSelectedItem().toString(), Integer.parseInt(txtTongDoanhThu.getText()), cboNgay.getSelectedItem().toString());
        in.show();
    }//GEN-LAST:event_btnInNgayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaoCaoTheoNgay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaoCaoTheoNgay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaoCaoTheoNgay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaoCaoTheoNgay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaoCaoTheoNgay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInNgay;
    private javax.swing.JButton btnThoatNgay;
    private javax.swing.JButton btnTimNgay;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JComboBox<String> cboNgay;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEmptyBaoCaoNgay;
    private javax.swing.JTextField txtTongDoanhThu;
    // End of variables declaration//GEN-END:variables
 private void ketNoiDL() {
        String strServerName = "KERO";
        String strDBName = "QL_RUOU";
        String strUserName = "sa";
        String strPassword = "sa";
        
        try {
            //Đăng kí csdl
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            //Đường dẫn
            String connURL = "jdbc:sqlserver://" + strServerName +
            ":1433; databaseName = " + strDBName + ";user = " + strUserName + ";password = " + strPassword  ;
            //--
            connect = DriverManager.getConnection(connURL);
            
        } catch (Exception e) {
            e.printStackTrace();
        } 
    }

    private boolean ktNam(int nam){
        if (nam < 1900 || nam > 2200){
            return false;
        }
        return true;
    }
    
    private boolean ktThang(int thang){
        if (thang < 0 || thang > 12){
            return false;
        }
        return true;
    }
    
    private boolean ktNgay(int ngay){
        switch(thang){
            case 1:
            case 3:
            case 5:
            case 7:
            case 8:
            case 10:
            case 12:
                if (ngay < 0 || ngay > 30){
                    return false;
                }
                break;
            case 2:
                if (nam % 400 == 0 || nam %4 == 0){
                    if (ngay < 0 || ngay > 29){
                        return false;
                    }
                }
                else{
                    if (ngay < 0 || ngay > 28){
                        return false;
                    }
                }
                break;
            case 4:
            case 6:
            case 9:
            case 11:
                if (ngay < 0 || ngay > 31){
                    return false;
                }
                break;
        }
        return true;
    }
    
    private void hienThi(){
        for (int i = 1; i < 32; i++){
            cboNgay.addItem("" + i);
        }
        cboNgay.setSelectedIndex(0);
        
        for (int i = 1; i < 13; i++) {
            cboThang.addItem("" + i);
        }
        cboThang.setSelectedIndex(0);
        
        for (int i = 2001; i < 2050; i++) {
            cboNam.addItem("" + i);
        }
        cboNam.setSelectedIndex(0);
    }


}
